// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//設計したデータベース
model User {
  id              String          @id @default(cuid()) // String型に変更、cuidでユニークID生成
  name            String
  email           String          @unique
  passwordHash    String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  saunaFacilities SaunaFacility[]
  reviews         Review[]
}

model SaunaFacility {
  id          String         @id @default(cuid()) // String型に変更、cuidでユニークID生成
  name        String
  address     String
  description String?
  createdBy   User        @relation(fields: [createdById], references: [id])
  createdById String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  saunaMeals  SaunaMeal[]
}

model SaunaMeal {
  id          String         @id @default(cuid()) // String型に変更、cuidでユニークID生成
  name        String
  description String?
  price       Int
  facility    SaunaFacility @relation(fields: [facilityId], references: [id])
  facilityId  String        // facilityIdもString型に変更
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  reviews     Review[]
}

model Review {
  id            String         @id @default(cuid()) // String型に変更、cuidでユニークID生成
  overallRating Int
  tasteRating   Int
  valueRating   Int
  comment       String?
  imageUrl      String?
  user          User      @relation(fields: [userId], references: [id])
  userId        String
  saunaMeal     SaunaMeal @relation(fields: [saunaMealId], references: [id])
  saunaMealId   String      // saunaMealIdもString型に変更
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  tags          Tag[]
}

model Tag {
  id      String   @id @default(cuid()) // String型に変更、cuidでユニークID生成
  name    String   @unique
  reviews Review[]
}
